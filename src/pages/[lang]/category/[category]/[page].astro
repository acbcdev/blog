---
import ContainerPosts from "@/components/ContainerPosts.astro";
import CardPost from "@/components/ui/CardPost.astro";
import Topic from "@/components/ui/Topic.astro";
import { LANGS } from "@/consts";
import { TopicsByLang } from "@/content/lib";
import Layout from "@/layouts/Layout.astro";
import { splitLang } from "@/lib/content";
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";

const posts = await getCollection("blog");
export const getStaticPaths = (async ({ paginate }) => {
  const posts = await getCollection("blog");

  return LANGS.flatMap((lang) => {
    const postsFiltered = posts.filter((i) => splitLang(i.slug)[0] === lang);
    const topics = [
      ...new Set(postsFiltered.map((post) => post.data.topic).filter(Boolean)),
    ];
    return topics.flatMap((topic) => {
      return paginate(
        postsFiltered.filter((post) => post.data.topic === topic),
        {
          params: { lang, category: topic },
          pageSize: 10,
        }
      );
    });
  });
}) satisfies GetStaticPaths;
const { page } = Astro.props;
const { lang, category } = Astro.params;

const topics = await TopicsByLang(lang);
---

<Layout title={`Articules List `} description={""} lang={lang}>
  <section class="topics">
    {
      topics.map((topic) => (
        <Topic
          href={`/${lang}/category/${topic}/1`}
          transition:name={`${topic}-topics`}
          style={{ order: category === topic ? -1 : 0 }}
          variant={category === topic ? "default" : "outline"}
        >
          {topic}
        </Topic>
      ))
    }
  </section>
  <ContainerPosts>
    {page.data.map((i) => <CardPost post={i} offDescription />)}
  </ContainerPosts>
</Layout>
<style>
  h1 {
    text-transform: capitalize;
  }
  .topics {
    display: flex;
    gap: 1rem;
    justify-content: end;
    padding: 1rem;
  }
</style>
