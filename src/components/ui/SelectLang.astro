---
import { languages } from "@/i18n/ui";
import { getLangFromUrl } from "@/i18n/utils";

const lang = getLangFromUrl(Astro.url);
---

<select id="lang-select" aria-label="Select language">
  {
    Object.entries(languages).map(([lg, name]) => (
      <option
        data-lang={lg}
        id="option"
        selected={lang === lg}
        aria-label={`${name} option`}
      >
        {name}
      </option>
    ))
  }
</select>
<script>
  import { $, $$ } from "@/lib/dom";
  const $select = $("#lang-select") as HTMLSelectElement;
  const $$options = $$("#option") as NodeListOf<HTMLOptionElement>;
  $select.addEventListener("change", () => {
    for (const $option of $$options) {
      if ($option.selected) {
        const lang = $option.dataset.lang;
        const [, path] = window.location.pathname.split(
          `/${lang === "en" ? "es" : "en"}/`
        );
        localStorage.setItem("lang", lang ?? "es");
        window.location.href = `/${lang}/${path ?? ""}`;
        break;
      }
    }
  });
</script>
<style>
  select {
    font-size: 1.2rem;
    border-radius: var(--radius-md);
    padding: 0.2rem 1rem;
    cursor: pointer;
    background-color: var(--gray-dark);
    &:focus {
      outline: 4px solid var(--gray);
      background-color: rgb(var(--gray-dark));
    }

    &:hover {
      background-color: var(--gray-dark);
    }

    & option {
      background-color: rgb(var(--gray-dark));
    }
  }
  select {
    /* -webkit-appearance: none; */
    /* -moz-appearance: none; */
    /* appearance: none; */
  }
  /* select::-ms-expand { */
  /* display: none; */
  /* } */
</style>
